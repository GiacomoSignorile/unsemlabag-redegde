experiment:
    id: experiment_id
    seed: 6492

data:
  name: "RedEdge"
  root_dir: "./samples/processed_images"  # Points to your folder containing 000, 001, etc.
  maps: "./samples/processed_images/000/RGB.png"
  map_out_name: "./results/field_000_vertical_generated_label.png"
  train_val_fields: ["001", "002", "003", "004"] # Fields to draw patches from for train/val
  test_fields: ["000"]                       # Field to draw patches from for test

  # How to find the image and GT patches within each field_id folder:
  image_patch_folder: "RGB"      # Subfolder under field_id containing RGB patch files (e.g., 62.png)
  gt_patch_folder: "groundtruth" # Subfolder under field_id containing GT patch files (e.g., 62.png)
  # We will assume image patch name matches GT patch name (e.g., "62.png")

  target_size: [512, 512] # This should match the actual size of your patches in ./samples/512/
                          # If patches are 224x224, set this to [224, 224]
  validation_split_ratio: 0.2 

##Training
train:
    n_gpus: 1
    workers: 0 # Number of workers for data loading for my cpu i7
    max_epoch: 100
    batch_size: 8
    overfit: False

##Network
model:
    num_classes: 4
    pre-trained: False
    lr: 0.01 # Changed from original 0.01
    loss:
        kl_div_anneal_epochs: 25

simulator:
    path_to_orthomosaic: None
    resize_flag: false
    resize_factor: 1 # ratio to original tile
    gsd: 0.0104 
    world_range: [2266, 8750] # [w, h] pixel
    sensor:
        resolution: [1024, 1024] # [w, h] pixel
        angle: [45, 45] # [w, h] degree

mapper:
  poses: [44, 88] 
  # poses: [42, 85] # [w, h] pixel
  map_boundary: [2266, 8750] # [w, h] pixel
  ground_resolution: [0.0104, 0.0104] # [0.001, 0.001]
  class_number: 4
