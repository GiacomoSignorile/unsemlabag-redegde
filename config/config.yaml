experiment:
    id: experiment_003_patch1024
    seed: 6492

data:
  name: "RedEdge"
  root_dir: "./results"  # Points to your folder containing 000, 001, etc.
  maps:  "./samples/rotated_ortho_vertical/000/RGB.png"
  map_out_name: "./results/generated_labels_vertical/field000_vert_gsd001_patch1024_label.png"

  train_val_fields: ["000", "001", "002", "004"] # Fields to draw patches from for train/val
  test_fields: ["003"]                       # Field to draw patches from for test

  # How to find the image and GT patches within each field_id folder:
  image_patch_folder: "images"      # Subfolder under field_id containing RGB patch files (e.g., 62.png)
  gt_patch_folder: "semantics" # Subfolder under field_id containing GT patch files (e.g., 62.png)
  # We will assume image patch name matches GT patch name (e.g., "62.png")

  target_size: [512, 512] # This should match the actual size of your patches in ./samples/512/
                          # If patches are 224x224, set this to [224, 224]
  validation_split_ratio: 0.2 

##Training
train:
    n_gpus: 1
    workers: 0 # Number of workers for data loading for my cpu i7
    max_epoch: 100
    batch_size: 8
    overfit: False

##Network
model:
    num_classes: 4
    pre-trained: False
    lr: 0.01 # Changed from original 0.01
    loss:
        kl_div_anneal_epochs: 25

simulator:
    path_to_orthomosaic: None
    resize_flag: false
    resize_factor: 1 # ratio to original tile
    gsd: 0.001  # original tile has 11664 x 8750 with 0.001 meter/pixel gsd
    world_range: [2802, 6847] # [w, h] pixel. field 000: [2802, 6847]; field 001: [2287, 6645]; field 002: [3699, 6945]; field 003: [2311, 6836]; field 004: [3170, 4692]
    sensor:
        resolution: [1024, 1024] # [w, h] pixel
        angle: [45, 45] # [w, h] degree

mapper:
  poses: [4, 6]     # field 000: [4 ,6]; field 001: [3, 6]; field 002: [6, 6]; field 003: [3, 6]; field 004: [4, 4]
  map_boundary: [2802, 6847] # [w, h] pixel
  ground_resolution: [0.001, 0.001] # [0.001, 0.001]
  class_number: 4
